/***
常见位操作

&与两个位都为1时，结果才为1

|或两个位都为0时，结果才为0

^异或两个位相同为0，相异为1

~取反0变1，1变0

<<左移各二进位全部左移若干位，高位丢弃，低位补0

>>右移 各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）

***/

/***

输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。

***/

class Solution {
public:
	int  NumberOf1(int n) {
		int bits = sizeof(n) * 8;
		int tmp;
		int ret = 0;
		while (bits >= 1)
		{
			tmp = n & 1;
			if (tmp == 1)
			{
				ret++;
			}
			n = n >> 1;

			bits--;
		}
		return ret;
	}
};